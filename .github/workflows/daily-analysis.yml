name: Shuangseqiu Data and Analysis - Merged and Consolidated Push (Sort by Filename Timestamp)

on:
  schedule:
    # 每天北京时间上午9点运行 (UTC+8，所以在UTC时间是1点)
    - cron: '0 1 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  daily_process:
    runs-on: ubuntu-latest
    env: # Set timezone for all steps in this job
      TZ: Asia/Shanghai

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run data acquisition script
      run: python ssq_data_processor.py

    - name: Run analysis script
      run: python ssq_analyzer.py

    - name: Create fixed filename copy
      run: |
        # 找出最新的分析报告 (按文件名时间戳排序)
        latest_report=$(ls ssq_analysis_output_*.txt | sort -r | head -n 1)

        # 创建固定文件名副本
        cp "$latest_report" "latest_ssq_analysis.txt"
        echo "Created fixed filename copy: latest_ssq_analysis.txt"

    - name: Clean old reports - keep only latest 3 by filename timestamp
      run: |
        # 列出所有分析报告并按文件名时间戳排序 (默认 ls 按字母顺序，即时间戳旧到新)
        all_reports=$(ls ssq_analysis_output_*.txt)

        # 计算文件总数
        count=$(echo "$all_reports" | wc -l)
        delete_count=$((count - 3))

        # 只在有超过3个报告时执行删除
        if [ $delete_count -gt 0 ]; then
          # 从按文件名时间戳排序（旧到新）的列表中，取出最旧的 $delete_count 个文件
          # ls 默认按字母顺序（旧到新），head -n 删除最前面（最旧）的几个
          delete_list=$(echo "$all_reports" | head -n $delete_count)

          # 删除旧报告
          echo "Deleting $delete_count old reports based on filename timestamp..."
          echo "$delete_list" | while read file; do
            echo "Removing $file"
            rm "$file"
          done
        else
          echo "No need to clean reports, have $count (≤3) reports."
        fi

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Commit updated files (CSV and Analysis Reports)
      run: |
        # 添加 shuangseqiu.csv
        git add shuangseqiu.csv
        # 添加保留的分析报告和固定文件名副本
        git add ssq_analysis_output_*.txt # 确保只添加剩下的文件
        git add latest_ssq_analysis.txt

        # 提交更改，包括删除的旧报告
        git commit -m "Auto update: Data and Analysis results $(date +'%Y-%m-%d')" || echo "No changes to commit"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
